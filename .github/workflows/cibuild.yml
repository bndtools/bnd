name: CI Build

on:
  push:
    branches-ignore:
    - 'dependabot/**'
    paths-ignore:
    - 'docs/**'
    - '.github/**/*docs*'
    - '.github/**/*codeql*'
    - '.github/*.yml'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '.github/**/*docs*'
    - '.github/**/*codeql*'
    - '.github/*.yml'

env:
  LC_ALL: en_US.UTF-8
  GRADLE_OPTS: >-
    -Dorg.gradle.parallel=true
  MAVEN_OPTS: >-
    -Dhttp.keepAlive=false
    -Dmaven.wagon.http.pool=false
    -Dmaven.wagon.http.retryHandler.count=3
  BNDTOOLS_CORE_TEST_NOJUNITOSGI: true

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: ${{ (github.repository != 'bndtools/bnd') || ((github.ref != 'refs/heads/master') && (github.ref != 'refs/heads/next')) || (github.event_name == 'pull_request') }}
      matrix:
        os: [ 'ubuntu-latest' ]
        java: [ '11', '16' ]
        runner: [ 'xvfb-run --auto-servernum {0}' ]
        script: [ 'build.sh' ]
        include:
        - os: 'ubuntu-latest'
          java: '8'
          runner: 'xvfb-run --auto-servernum {0}'
          script: 'build.sh'
          canonical: true
          fetch-depth: '0'
        - os: 'ubuntu-latest'
          java: '8'
          runner: 'xvfb-run --auto-servernum {0}'
          script: 'rebuild.sh'
        - os: 'windows-latest'
          java: '8'
          runner: '{0}'
          script: 'build.sh'
    name: JDK${{ matrix.java }} ${{ matrix.os }} ${{ matrix.script }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: ${{ matrix.fetch-depth }}
    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1.0.3
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}
    - name: Build
      id: build
      run: |
        ${{ format(matrix.runner, format('./.github/scripts/{0}', matrix.script)) }}
      env:
        CANONICAL: ${{ matrix.canonical && !strategy.fail-fast }}
        JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
    - name: Upload Test Reports
      if: ${{ always() && ((steps.build.outcome == 'success') || (steps.build.outcome == 'failure')) }}
      uses: actions/upload-artifact@v2
      with:
        name: JDK${{ matrix.java }}_${{ matrix.os }}_${{ matrix.script }}-test-reports
        path: |
          */generated/test-reports/*/TEST-*.xml
          maven/*/target/surefire-reports/TEST-*.xml
