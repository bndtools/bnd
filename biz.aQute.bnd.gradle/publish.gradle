// Edit ext.artifactVersion below to the version you wish to publish.
// This version must already be visible in maven central.
// Then run the following commands from the biz.aQute.bnd.gradle folder:
// ../gradlew --no-daemon --settings-file publishsettings.gradle displayArtifacts publishPlugins

plugins {
	id 'com.gradle.plugin-publish' version '0.12.0'
	id 'java'
	id 'java-gradle-plugin'
	id 'maven-publish'
}

ext.groupId = 'biz.aQute.bnd'
ext.artifactId = 'biz.aQute.bnd.gradle'
ext.artifactVersion = '5.2.0'

repositories {
	mavenCentral()
}

configurations {
	archives.artifacts.clear()
	pom
	plugin
	plugin.dependencies.all { Dependency dep ->
		if (dep instanceof ExternalDependency) {
			dep.version {
				strictly dep.getVersion()
			}
		}
		if (dep instanceof ModuleDependency) {
			dep.transitive = false
		}
	}
}

dependencies {
	pom "${groupId}:${artifactId}:${artifactVersion}@pom"
	plugin "${groupId}:${artifactId}:${artifactVersion}@jar"
	plugin "${groupId}:${artifactId}:${artifactVersion}:javadoc@jar"
	plugin "${groupId}:${artifactId}:${artifactVersion}:sources@jar"
}

artifacts {
	configurations.plugin.resolvedConfiguration.resolvedArtifacts.each { artifact ->
		archives(artifact.file) {
			classifier = artifact.classifier
		}
	}
}

tasks.create('displayArtifacts') {
	doLast {
		println "gradle.publish.key: ${project.findProperty('gradle.publish.key')}"
		println "gradle.publish.secret: ${project.findProperty('gradle.publish.secret')}"
		println()
		println "pom:"
		configurations.pom.resolvedConfiguration.resolvedArtifacts.each { artifact ->
			println "${artifact} ${artifact.file}"
		}
		println()
		println "artifacts:"
		configurations.archives.artifacts.each { artifact ->
			println "${artifact} ${artifact.file}"
		}
	}
}

def pomFile = file("$buildDir/pom.xml")

def copyPublishedPom = tasks.create('copyPublishedPom') {
	inputs.files(configurations.pom).withPathSensitivity(PathSensitivity.NONE)
	outputs.file(pomFile)
	doLast {
		println "copy published pom ${configurations.pom.singleFile} to ${pomFile}"
		pomFile.text = configurations.pom.singleFile.text
	}
}

afterEvaluate {
	publishing {
		publications {
			pluginMaven {
				groupId = project.groupId
				artifactId = project.artifactId
				version = project.artifactVersion
			}
		}
	}
	tasks.named('generatePomFileForPluginMavenPublication') {
		destination = pomFile
		enabled = false
		finalizedBy copyPublishedPom
	}
}

pluginBundle {
	website = 'https://github.com/bndtools/bnd'
	vcsUrl = 'https://github.com/bndtools/bnd.git'

	description = "Gradle Plugin for developing OSGi bundles with Bnd. Bnd is the premiere tool for creating OSGi bundles. This gradle plugin is from the team that develops Bnd and is used by the Bnd team to build Bnd itself. See https://github.com/bndtools/bnd/blob/master/biz.aQute.bnd.gradle/README.md for information on using in a Bnd Workspace and a typical Gradle build."
	tags = ['osgi', 'bnd']

	plugins {
		bndProjectPlugin {
			id = 'biz.aQute.bnd'
			displayName = 'Bnd Project Plugin'
			description = "Gradle Plugin for developing OSGi bundles with Bnd. Bnd is the premiere tool for creating OSGi bundles. This gradle plugin is from the team that develops Bnd and is used by the Bnd team to build Bnd itself. See https://github.com/bndtools/bnd/blob/${project.artifactVersion}.REL/biz.aQute.bnd.gradle/README.md for information on using in a Bnd Workspace and a typical Gradle build."
			version = project.artifactVersion
		}
		bndBuilderPlugin {
			id = 'biz.aQute.bnd.builder'
			displayName = 'Bnd Builder Plugin'
			description = "Gradle Plugin for developing OSGi bundles with Bnd. Bnd is the premiere tool for creating OSGi bundles. This gradle plugin is from the team that develops Bnd and is used by the Bnd team to build Bnd itself. See https://github.com/bndtools/bnd/blob/${project.artifactVersion}.REL/biz.aQute.bnd.gradle/README.md for information on using in a Bnd Workspace and a typical Gradle build."
			version = project.artifactVersion
		}
		bndWorkspacePlugin {
			id = 'biz.aQute.bnd.workspace'
			displayName = 'Bnd Workspace Plugin'
			description = "Gradle Plugin for developing OSGi bundles with Bnd. Bnd is the premiere tool for creating OSGi bundles. This gradle plugin is from the team that develops Bnd and is used by the Bnd team to build Bnd itself. See https://github.com/bndtools/bnd/blob/${project.artifactVersion}.REL/biz.aQute.bnd.gradle/README.md for information on using in a Bnd Workspace and a typical Gradle build."
			version = project.artifactVersion
		}
	}
}
